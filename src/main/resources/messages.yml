# You can crate your embeds here: https://discohook.org/
# Webhook structure is explained here: https://birdie0.github.io/discord-webhooks-guide/index.html
# Minotar API for player head icons: https://minotar.net/

onServerStart:
  target: "main"
  # Available variables:
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $serverIp$ - IP address of your server.
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  # - $serverMotd$ - MOTD of your server determined in server.properties
  # - $serverName$ - name of your server
  # - $serverVersion$ - version of your server. this isn't the minecraft version
  # - $isOnlineMode$ - true if online-mode is enabled, false otherwise
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "Server"
      },
      "description": "Server Started.",
      "color": 65280,
      "timestamp": "$timestamp$"
    }
  ]
}'

onServerStop:
  target: "main"
  # Available variables:
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $serverIp$ - IP address of your server.
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  # - $serverMotd$ - MOTD of your server determined in server.properties
  # - $serverName$ - name of your server
  # - $serverVersion$ - version of your server. this isn't the minecraft version
  # - $isOnlineMode$ - true if online-mode is enabled, false otherwise
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "Server"
      },
      "description": "Server Stopped.",
      "color": 16711680,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerJoin:
  target: "main"
  usePermissions: false
  # Available variables:
  # - $player$ - player who joined
  # - $rawUsername$ - player name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who triggered the event
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawUsername$",
        "icon_url": "https://minotar.net/helm/$rawUsername$/512.png"
      },
      "description": "**$player$** joined the game.",
      "color": 65280,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerQuit:
  target: "main"
  usePermissions: false
  # Available variables:
  # - $player$ - player who left
  # - $rawUsername$ - player name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who triggered the event
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawUsername$",
        "icon_url": "https://minotar.net/helm/$rawUsername$/512.png"
      },
      "description": "**$player$** left the game.",
      "color": 16711680,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerKicked:
  target: "main"
  usePermissions: false
  # Available variables:
  # - $player$ - player who left
  # - $rawUsername$ - player name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who triggered the event
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $reason$ - reason provided
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online

  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawUsername$",
        "icon_url": "https://minotar.net/helm/$rawUsername$/512.png"
      },
      "description": "**$player$** was kicked: *$reason$*",
      "color": 16753920
    }
  ]
}'

onPlayerDeath:
  # Available variables:
  # - $player$ - player who died
  # - $rawVictim$ - victim's name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who died

  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $deathMessage$ - death message visible in chat
  # - $newLevel$ - player's level after death
  # - $newExp$ - player's experience after death
  # - $oldLevel$ - player's level before dying
  # - $oldExp$ - player's experience before dying
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  playerKilledByNPC:
    target: "main"
    usePermissions: false
    announce: true
    messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawVictim$",
        "icon_url": "https://minotar.net/helm/$rawVictim$/512.png"
      },
      "description": "**$player$** died.",
      "color": 15631086,
      "timestamp": "$timestamp$"
    }
  ]
}'
  playerKilledByPlayer:
    target: "main"
    usePermissions: false
    # Additional variables:
    # - $killer$ - killer's player name
    # - $rawKiller$ - killer's name before transformation (i.e. escaping markdown)
    # - $killerUuid$ - player's uuid who killed the player
    # This uses relational placeholders from PlaceholderAPI. Its usage is as follows: %<rel_(identifier)_(params)>%
    # The first identifier is the victim, where the second is the killer.
    announce: true
    messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawVictim$",
        "icon_url": "https://minotar.net/helm/$rawVictim$/512.png"
      },
      "description": "$message$",
      "color": 16711680,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerChat:
  target: "main"
  usePermissions: false
  # Do we allow the user to have placeholders in their chat message?
  # Setting this to true will allow the player to format their messages using PAPI (%%) and built-in ($$) placeholders.
  allow-placeholders-in-message: false

  # Available variables:
  # - $player$ - player who left
  # - $rawUsername$ - player name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who died
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $message$ - message sent by player
  # - $worldName$ - name of the world the player currently is
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawUsername$",
        "icon_url": "https://minotar.net/helm/$rawUsername$/512.png"
      },
      "description": "$message$",
      "color": 3447003,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerAdvancement:
  target: "main"
  usePermissions: false
  # Available variables:
  # - $player$ - player name
  # - $rawUsername$ - player name before transformation (i.e. escaping markdown)
  # - $uuid$ - player's uuid who died
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $advancement$ - the name of the advancement
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  announce: true
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "$rawUsername$",
        "icon_url": "https://minotar.net/helm/$rawUsername$/512.png"
      },
      "description": "**$player$** has made the advancement `[$advancement$]`",
      "color": 16766720,
      "timestamp": "$timestamp$"
    }
  ]
}'

onPlayerCountChange:
  target: "main"
  timeout-delay: 100 # Delay in ticks until the message can be sent. Each update in player count restarts the timer
  # Available variables:
  # - $time$ - server's local time
  # - $timestamp$ - the current timestamp
  # - $maxPlayers$ - slot count
  # - $playersOnline$ - the amount of players online
  # - $oldPlayerCount$ - previous player count
  # - $playerCountChange$ - the difference in player count - can be -11, -3 or 4 depending on change
  announce: false
  messageJson: '{
  "embeds": [
    {
      "author": {
        "name": "Server"
      },
      "description": "Current player count: **$playersOnline$** | `$playerCountChange$`",
      "color": 16753920,
      "timestamp": "$timestamp$"
    }
  ]
}'